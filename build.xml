<?xml version="1.0" encoding="UTF-8"?>
<project name="G15Control" default="default" basedir=".">
	<description>Builds, tests, and runs the project G15Control.</description>
	<!-- Default Properties -->
	<property name="main.class" value="uk.org.dataforce.g15.G15Control"/>
	<property name="dist.dir" value="dist"/>
	<property name="dist.jar" value="${dist.dir}/G15Control.jar"/>
	<property name="javadoc.dir" value="${dist.dir}/javadoc"/>
	<property name="javadoc.additionalparam" value=""/>
	<property name="javadoc.author" value="false"/>
	<property name="javadoc.encoding" value=""/>
	<property name="javadoc.noindex" value="false"/>
	<property name="javadoc.nonavbar" value="false"/>
	<property name="javadoc.notree" value="false"/>
	<property name="javadoc.private" value="false"/>
	<property name="javadoc.splitindex" value="true"/>
	<property name="javadoc.use" value="true"/>
	<property name="javadoc.version" value="false"/>
	<property name="javadoc.windowtitle" value="G15Control"/>
	<property name="build.dir" value="build"/>
	<property name="build.classes.dir" value="${build.dir}/classes"/>
	<property name="build.classes.excludes" value="**/*.java,**/*.sh"/>
	<property name="src.dir" value="src"/>
	<property name="javac.classpath" value=""/>
	<property name="javac.compilerargs" value="-Xlint:all"/>
	<property name="javac.deprecation" value="true"/>
	<property name="javac.source" value="1.6"/>
	<property name="javac.target" value="1.6"/>
	<property name="test.src.dir" value="test"/>
	<property name="test.includes" value="**/*Test.java"/>
	<property name="test.build.classes.excludes" value="**/*.java,**/*.sh"/>
	<property name="test.build.classes.dir" value="${build.dir}/test/classes"/>
	<property name="test.results.dir" value="${build.dir}/test/results"/>
	<property name="test.junit.path" value="/usr/share/java/junit.jar"/>
	<property name="javac.test.compilerargs" value="${javac.compilerargs}"/>
	<property name="test.classpath" value="${javac.classpath}:${build.classes.dir}:${test.build.classes.dir}:${test.junit.path}"/>
	<property name="test.reports" value="${build.dir}/test/report"/>
	<property name="libs.antcontrib" value="/usr/share/java/ant-contrib.jar"/>
	<!-- Custom user properties should go in a file called build.properties -->
	<property file="build.properties"/>
	
	<!--
	  Initialisation
	  -->
	<target name="init" description="Initialisation">
		<mkdir dir="${build.classes.dir}"/>
		<mkdir dir="${test.build.classes.dir}"/>
		<mkdir dir="${test.results.dir}"/>
		<mkdir dir="${test.reports}"/>
		<mkdir dir="${javadoc.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>
	
	<!--
	  Remove existing builds
	  -->
	<target name="clean" description="Clean Up">	
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>

	<!--
	  Testing
	  -->
	<target name="compile-test" depends="init" description="Compile Project Tests">
		<javac srcdir="${test.src.dir}" destdir="${test.build.classes.dir}" deprecation="true" includeantruntime="false">
			<classpath>
				<path path="${test.classpath}"/>
			</classpath>
			<compilerarg line="${javac.test.compilerargs}"/>
		</javac>
		
		<copy todir="${test.build.classes.dir}">
			<fileset dir="${test.src.dir}" excludes="${test.build.classes.excludes}"/>
		</copy>
	</target>
	
	<target name="test" depends="compile, compile-test">
		<junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed">
			<batchtest todir="${test.results.dir}">
				<fileset dir="${test.src.dir}" includes="${test.includes}"/>
			</batchtest>
			<classpath>
				<path path="${test.classpath}"/>
			</classpath>
			<syspropertyset>
				<propertyref prefix="test-sys-prop."/>
				<mapper type="glob" from="test-sys-prop.*" to="*"/>
			</syspropertyset>
			<formatter type="brief" usefile="false"/>
			<formatter type="xml"/>
		</junit>
	</target>
	
	<target name="junit-report" depends="test" description="Produce a report of junit results">
		<junitreport todir="${test.reports}">
			<fileset dir="${test.results.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report todir="${test.reports}"/>
		</junitreport>
	</target>
	
	<!--
	  Compile
	  -->
	<target name="compile" depends="init" description="Compile Project">
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" deprecation="true" source="${javac.source}" target="${javac.target}" includeantruntime="false">
			<classpath>
				<path path="${javac.classpath}"/>
			</classpath>
			<compilerarg line="${javac.compilerargs}"/>
		</javac>
		
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}" excludes="${build.classes.excludes}"/>
		</copy>
	</target>
	
	<!--
	  Build Jar File
	  -->
	<target name="jar" depends="compile, build-plugins" description="Build JAR.">
		<jar jarfile="${dist.jar}" compress="${jar.compress}" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}"/>
			</manifest>
		</jar>
	</target>
	
	<!--
	  Build and run the jar
	  -->
	<target name="run" depends="jar" description="Build and run jar.">
		<!-- <echo message="This task is disabled due to the fact the ShutdownHook used to save settings is unable to run completely when run via ant"/>
		<echo message="Please use:"/>
		<echo message="    java -jar ${dist.jar}"/>
		<echo message="Instead."/> -->
		<java fork="true" jar="${dist.jar}"/>
	</target>
	
	<!--
	  Build Javadoc
	  -->
	<target name="javadoc" depends="init" description="Build Javadoc for source.">
		<javadoc destdir="${javadoc.dir}" source="${javac.source}" notree="${javadoc.notree}" use="${javadoc.use}" nonavbar="${javadoc.nonavbar}" noindex="${javadoc.noindex}" splitindex="${javadoc.splitindex}" author="${javadoc.author}" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}" private="${javadoc.private}" additionalparam="${javadoc.additionalparam}" failonerror="true" useexternalfile="true">
			<classpath>
				<path path="${javac.classpath}"/>
			</classpath>
			<sourcepath>
				<pathelement location="${src.dir}"/>
			</sourcepath>
			<packageset dir="${src.dir}" includes="*/**"/>
			<fileset dir="${src.dir}" includes="*.java"/>
		</javadoc>
	</target>
	
	<!--
	  Build Plugins
	  -->
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${libs.antcontrib}"/>
		</classpath>
	</taskdef>
	
	
	<target name="makepluginjar">
		<propertyregex property="pluginjar.name" input="${target.file}" regexp=".*[\\/](.*)$" select="\1.jar" casesensitive="false" />
		<propertyregex property="folder.name" input="${target.file}" regexp=".*${build.classes.dir}/(.*)$" select="\1" casesensitive="false" />
		<if>
			<available file="${src.dir}/${folder.name}/.ignore"/>
			<then>
					<echo message="Not building: ${folder.name}" />
			</then>
			<else>
				<echo message="Building: ${folder.name} to ${pluginjar.name}"/>
				<delete file="plugins/${pluginjar.name}"/>
				<jar jarfile="plugins/${pluginjar.name}" basedir="build/classes" includes="${folder.name}/**/*.class ${folder.name}/**/*.png">
					<metainf file="${target.file}/plugin.info"/>
				</jar>
			</else>
		</if>
	</target>
		
	<target name="build-plugins" depends="build-plugins_ant-contrib"/>
	<available file="${libs.antcontrib}" property="has.ant-contrib"/>
	
	<target name="build-plugins_ant-contrib" if="has.ant-contrib">
		<mkdir dir="plugins/"/>
		<foreach target="makepluginjar" param="target.file">
			<path>
				<dirset dir="${build.classes.dir}/uk/org/dataforce/g15/plugins/">
					<include name="**/*"/>
					<exclude name="**/*/*/**"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<!--
	  Default
	  -->
	<target name="default" depends="jar,test,javadoc" description="Build and test whole project."/>
</project>
